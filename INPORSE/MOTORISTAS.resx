<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnmenu.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAANrSURBVFhH7VdLTBNRFGWhrnWhiQuNkWk700I7nRatrtjbFe5UIuAGioBGir+FS0mUIMZEJCAk
        ogviJ4gaoWIk8Y9uRAVduDAuTIwm0i4kwT7vmd4phRnboW00Jp7kJNOZe8+9777PfS35J+B1uVw+STns
        cyj3fA73tOpQEiA/x4htPll2snnx4He5gn5JHqcAwg6RoFYqB9g9fwQCgZWqpJwj0SSEK3wBEa6uEfva
        O0RT/6Bou3FLJ57r6F14Tw3ZaEYiSZ9DPltZWbmC5ZaH8o3la1Sn+z7ENLdX7Iy0iOi1m+Lo7bGsjF4d
        FlUNzboPfFENdZO6mmXtASM3Sr41EBKR873pAH3PXornHz+JL4mEmJufXxQ8k409/SK0ZbtRjQmPx7OK
        5XODyy5CwW3i4OUhXbDjwUPx4es38Xk2LkbezIgzE4/FibvjpsCZhC80UpWQu1g+O7DgyCGJEjZ29+lC
        PU8mRfzHnBh+PS2O3YmZAmUjqqcp+nT89EqKxmF+D6P0mHMIYOQI3vv0hUncLqvqm4ypiHEYa2CfwxCr
        HYsJzig7Rr5UdDlsJa307tisODicGTT6IzAKV9fqjlhwmPPjyyy7FcO7a4wqRDmcGfQRp5m+z+E0Sasd
        C26pWD6saz9tJDDG4cygj+9h1DJwRXfCVuuceGQSy4c4rDiBGQ5nBn2Mwyh6fUR3wj7PtdXsEpqcQJzD
        mUEfZzMTKCZxinIC3zmcGXQAvYNR88CgpUghbO6/pCeAzsnhzCADfRGisViJFMLak6eMCoxyODPoYxuM
        0NWsRArhjl179QT8TvkQhzNj4SDS0gdRMYiDKOj1pyqQ7SAC9PZJhmipVmL5sKp+f+7yG8BNhgyTaCCR
        7oU2nC8bMpqR6vCoHCY7cJNBxqFgKN2O8+GBwSH9PsGj72T53MA1ypgKCGAUVgGysfHCxfSFhLZeoqKs
        bAPL2wOuUUYSKCHWBBaTVbBMwgZzrinlqZE7U6crccpb6l3H8vaQqoTcRc40f6ndga6GxoKDBScmiGe8
        w1ar8KYvpfDpDCjKer+kvMI7HEL4zfL24ZPcHhIYYWE7jGXefvyStLbgJADsYRKJEsf4zwjKC74ljqoO
        d6tW6pHYfBGKlkQh+J+EAewGSmAKSVAHjvDrPwskQZVo4J9/GyUlvwDYdW3WB87KEwAAAABJRU5ErkJg
        gg==
</value>
  </data>
  <metadata name="Timercontrae.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>284, 18</value>
  </metadata>
  <metadata name="Timerdespliega.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>408, 18</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>53</value>
  </metadata>
</root>